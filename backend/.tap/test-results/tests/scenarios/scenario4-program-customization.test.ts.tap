TAP version 14
# Subtest: Scenario 4: Program Customization
{"level":30,"time":1759552508618,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","req":{"method":"POST","url":"/api/auth/register","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552508838,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","res":{"statusCode":201},"responseTime":218.054749999661,"msg":"request completed"}
{"level":30,"time":1759552508839,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","req":{"method":"POST","url":"/api/auth/login","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509041,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","res":{"statusCode":200},"responseTime":202.52961699990556,"msg":"request completed"}
    # Subtest: AC-1: View program exercises with details
        ok 1 - Returns 200 OK
        ok 2 - Has program_days array
        ok 3 - Has exercises array
        ok 4 - Has at least one exercise
        ok 5 - Exercise has name
        ok 6 - Exercise has target_sets
        ok 7 - Exercise has target_rep_range
        ok 8 - Exercise has target_rir
        ok 9 - Exercise has order_index
        1..9
    ok 1 - AC-1: View program exercises with details # time=5.918ms
    
    # Subtest: AC-2: Add new exercise to program day
        ok 1 - Found an exercise to add
        ok 2 - Exercise added successfully
        ok 3 - Returns program_exercise_id
        1..3
    ok 2 - AC-2: Add new exercise to program day # time=6.221ms
    
    # Subtest: AC-3 & AC-4: Volume validation on add
        ok 1 - Volume analysis retrieved
        ok 2 - Has muscle_groups array
        ok 3 - Has at least one muscle group
        ok 4 - Has planned_sets
        ok 5 - Has MEV value
        ok 6 - Has MAV value
        ok 7 - Has MRV value
        ok 8 - Has zone classification
        ok 9 - Zone is valid enum value
        ok 10 - MEV < MAV
        ok 11 - MAV < MRV
        1..11
    ok 3 - AC-3 & AC-4: Volume validation on add # time=10.255ms
    
    # Subtest: AC-5: Remove exercise from program
        ok 1 - Exercise removed successfully
        ok 2 - Deletion confirmed
        1..2
    ok 4 - AC-5: Remove exercise from program # time=3.047ms
    
    # Subtest: AC-6: Volume warning on remove if below MEV
        ok 1 - Has warnings array
        ok 2 - Warning has muscle_group
        ok 3 - Warning issue is valid enum
        ok 4 - Warning has current_volume
        ok 5 - Warning has threshold
        1..5
    ok 5 - AC-6: Volume warning on remove if below MEV # time=3.393ms
    
    # Subtest: AC-7 & AC-8: Batch reorder exercises
        ok 1 - Has at least 2 exercises to reorder
{"level":30,"time":1759552509042,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","req":{"method":"GET","url":"/api/programs","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509046,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","res":{"statusCode":200},"responseTime":4.21586100012064,"msg":"request completed"}
{"level":30,"time":1759552509047,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","req":{"method":"GET","url":"/api/programs","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509048,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","res":{"statusCode":200},"responseTime":1.178580999840051,"msg":"request completed"}
{"level":30,"time":1759552509055,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","req":{"method":"GET","url":"/api/exercises?muscle_group=chest","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509056,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","res":{"statusCode":200},"responseTime":1.6245899996720254,"msg":"request completed"}
{"level":30,"time":1759552509056,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-6","req":{"method":"GET","url":"/api/programs","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509057,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-6","res":{"statusCode":200},"responseTime":0.8508830000646412,"msg":"request completed"}
{"level":30,"time":1759552509058,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-7","req":{"method":"POST","url":"/api/program-exercises","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509060,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-7","res":{"statusCode":201},"responseTime":1.6546919997781515,"msg":"request completed"}
{"level":30,"time":1759552509061,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-8","req":{"method":"GET","url":"/api/programs/402/volume","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509069,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-8","res":{"statusCode":200},"responseTime":8.312151999678463,"msg":"request completed"}
{"level":30,"time":1759552509072,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-9","req":{"method":"GET","url":"/api/programs","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509073,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-9","res":{"statusCode":200},"responseTime":1.1792790000326931,"msg":"request completed"}
{"level":30,"time":1759552509073,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-a","req":{"method":"DELETE","url":"/api/program-exercises/9022","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509074,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-a","res":{"statusCode":200},"responseTime":0.8041590000502765,"msg":"request completed"}
{"level":30,"time":1759552509076,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-b","req":{"method":"GET","url":"/api/programs/402/volume","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509077,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-b","res":{"statusCode":200},"responseTime":1.7923500002361834,"msg":"request completed"}
{"level":30,"time":1759552509080,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-c","req":{"method":"GET","url":"/api/programs","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509082,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-c","res":{"statusCode":200},"responseTime":1.7171999998390675,"msg":"request completed"}
{"level":30,"time":1759552509082,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-d","req":{"method":"PATCH","url":"/api/program-exercises/batch-reorder","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
        ok 2 - Reorder successful
        ok 3 - Reorder confirmed
        ok 4 - First exercise moved to index 1
        ok 5 - Second exercise moved to index 0
        1..5
    ok 6 - AC-7 & AC-8: Batch reorder exercises # time=7.288ms
    
{"level":30,"time":1759552509084,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-d","res":{"statusCode":200},"responseTime":1.6278730002231896,"msg":"request completed"}
{"level":30,"time":1759552509085,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-e","req":{"method":"GET","url":"/api/programs","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509086,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-e","res":{"statusCode":200},"responseTime":1.3670129999518394,"msg":"request completed"}
{"level":30,"time":1759552509088,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-f","req":{"method":"GET","url":"/api/programs","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509089,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-f","res":{"statusCode":200},"responseTime":1.1252910001203418,"msg":"request completed"}
{"level":30,"time":1759552509090,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-g","req":{"method":"PATCH","url":"/api/program-exercises/8903","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: AC-9: Update exercise sets/reps/RIR
        ok 1 - Update successful
        ok 2 - Update confirmed
        not ok 3 - Sets updated
          ---
          compare: ===
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 364
            columnNumber: 7
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:364:7)
          source: |2
                const updatedExercise = afterResponse.json();
          
                t.equal(updatedExercise.target_sets, 5, 'Sets updated');
            ------^
                t.equal(updatedExercise.target_rep_range, '6-10', 'Rep range updated');
                t.equal(updatedExercise.target_rir, 1, 'RIR updated');
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -5
            +undefined
          ...
        
        not ok 4 - Rep range updated
          ---
          compare: ===
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 365
            columnNumber: 7
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:365:7)
          source: |2
          
                t.equal(updatedExercise.target_sets, 5, 'Sets updated');
                t.equal(updatedExercise.target_rep_range, '6-10', 'Rep range updated');
            ------^
                t.equal(updatedExercise.target_rir, 1, 'RIR updated');
              });
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -6-10
            +undefined
          ...
        
        not ok 5 - RIR updated
          ---
          compare: ===
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 366
            columnNumber: 7
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:366:7)
          source: |2
                t.equal(updatedExercise.target_sets, 5, 'Sets updated');
                t.equal(updatedExercise.target_rep_range, '6-10', 'Rep range updated');
                t.equal(updatedExercise.target_rir, 1, 'RIR updated');
            ------^
              });
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -1
            +undefined
          ...
        
        1..5
    not ok 7 - AC-9: Update exercise sets/reps/RIR # time=60.315ms
      ---
      at:
        fileName: tests/scenarios/scenario4-program-customization.test.ts
        lineNumber: 320
        columnNumber: 11
        typeName: Test
      source: |2
      
          // AC-9: Update sets/reps/RIR for existing exercise
          await t.test('AC-9: Update exercise sets/reps/RIR', async (t) => {
        ----------^
            // Get first exercise
            const programResponse = await app.inject({
      ...
    
    # Subtest: AC-10: Multi-muscle exercise volume counting
        ok 1 - Exercise works multiple muscle groups
        not ok 2 - Primary muscle group abs tracked
          ---
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 408
            columnNumber: 9
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:408:9)
          source: >2
                  );
          
                  t.ok(primaryMuscle, `Primary muscle group ${multiMuscleExercise.primary_muscle_group} tracked`);
            --------^
                  t.ok(primaryMuscle.planned_sets > 0, 'Primary muscle has planned sets');
          ...
        
        not ok 3 - Cannot read properties of undefined (reading 'planned_sets')
          ---
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:409:26)
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 409
            columnNumber: 26
            typeName: Test
            methodName: <anonymous>
            functionName: Test.<anonymous>
          type: TypeError
          tapCaught: returnedPromiseRejection
          source: >2
          
                  t.ok(primaryMuscle, `Primary muscle group ${multiMuscleExercise.primary_muscle_group} tracked`);
                  t.ok(primaryMuscle.planned_sets > 0, 'Primary muscle has planned sets');
            -------------------------^
          
                  // Note: Secondary muscle counting depends on implementation
          ...
        
        1..3
    not ok 8 - AC-10: Multi-muscle exercise volume counting # time=12.837ms
      ---
      at:
        fileName: tests/scenarios/scenario4-program-customization.test.ts
        lineNumber: 370
        columnNumber: 11
        typeName: Test
      source: |2
      
          // AC-10: Multi-muscle exercises count towards all muscle groups
          await t.test('AC-10: Multi-muscle exercise volume counting', async (t) => {
        ----------^
            // Find a compound exercise that works multiple muscle groups
            // (e.g., Barbell Bench Press works chest + triceps + front delts)
      ...
    
{"level":30,"time":1759552509091,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-g","res":{"statusCode":200},"responseTime":1.438391000032425,"msg":"request completed"}
{"level":30,"time":1759552509092,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-h","req":{"method":"GET","url":"/api/program-exercises/8903","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509119,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-h","res":{"statusCode":200},"responseTime":26.601344000082463,"msg":"request completed"}
{"level":30,"time":1759552509151,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-i","req":{"method":"GET","url":"/api/exercises?movement_pattern=compound","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509152,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-i","res":{"statusCode":200},"responseTime":1.046159999910742,"msg":"request completed"}
{"level":30,"time":1759552509153,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-j","req":{"method":"GET","url":"/api/programs/402/volume","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509154,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-j","res":{"statusCode":200},"responseTime":1.2417170000262558,"msg":"request completed"}
{"level":30,"time":1759552509166,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-k","req":{"method":"GET","url":"/api/programs","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509168,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-k","res":{"statusCode":200},"responseTime":1.0735379997640848,"msg":"request completed"}
{"level":30,"time":1759552509168,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-l","req":{"method":"PATCH","url":"/api/program-exercises/8903","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: AC-11: Changes persist across API calls
        not ok 1 - Call 1: Sets persisted (4)
          ---
          compare: ===
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 458
            columnNumber: 9
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:458:9)
          source: |2
                  const persistedExercise = checkResponse.json();
          
                  t.equal(
            --------^
                    persistedExercise.target_sets,
                    4,
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -4
            +undefined
          ...
        
        not ok 2 - Call 1: RIR persisted (3)
          ---
          compare: ===
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 463
            columnNumber: 9
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:463:9)
          source: |2
                    `Call ${i + 1}: Sets persisted (4)`
                  );
                  t.equal(
            --------^
                    persistedExercise.target_rir,
                    3,
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -3
            +undefined
          ...
        
        not ok 3 - Call 2: Sets persisted (4)
          ---
          compare: ===
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 458
            columnNumber: 9
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:458:9)
          source: |2
                  const persistedExercise = checkResponse.json();
          
                  t.equal(
            --------^
                    persistedExercise.target_sets,
                    4,
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -4
            +undefined
          ...
        
        not ok 4 - Call 2: RIR persisted (3)
          ---
          compare: ===
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 463
            columnNumber: 9
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:463:9)
          source: |2
                    `Call ${i + 1}: Sets persisted (4)`
                  );
                  t.equal(
            --------^
                    persistedExercise.target_rir,
                    3,
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -3
            +undefined
          ...
        
        not ok 5 - Call 3: Sets persisted (4)
          ---
          compare: ===
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 458
            columnNumber: 9
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:458:9)
          source: |2
                  const persistedExercise = checkResponse.json();
          
                  t.equal(
            --------^
                    persistedExercise.target_sets,
                    4,
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -4
            +undefined
          ...
        
        not ok 6 - Call 3: RIR persisted (3)
          ---
          compare: ===
          at:
            fileName: tests/scenarios/scenario4-program-customization.test.ts
            lineNumber: 463
            columnNumber: 9
            typeName: Test
          stack: >
            Test.<anonymous>
            (tests/scenarios/scenario4-program-customization.test.ts:463:9)
          source: |2
                    `Call ${i + 1}: Sets persisted (4)`
                  );
                  t.equal(
            --------^
                    persistedExercise.target_rir,
                    3,
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -3
            +undefined
          ...
        
        ok 7 - Sets persisted in full program fetch
        ok 8 - RIR persisted in full program fetch
        1..8
    not ok 9 - AC-11: Changes persist across API calls # time=119.238ms
      ---
      at:
        fileName: tests/scenarios/scenario4-program-customization.test.ts
        lineNumber: 420
        columnNumber: 11
        typeName: Test
      source: |2
      
          // AC-11: Changes persist across API calls
          await t.test('AC-11: Changes persist across API calls', async (t) => {
        ----------^
            // Make a change (update an exercise)
            const programResponse = await app.inject({
      ...
    
    1..9
not ok 1 - Scenario 4: Program Customization # time=866.591ms
  ---
  at:
    fileName: tests/scenarios/scenario4-program-customization.test.ts
    lineNumber: 24
    columnNumber: 5
    isToplevel: true
  source: |
    import buildApp from '../../src/server.js';
  
    tap.test('Scenario 4: Program Customization', async (t) => {
    ----^
      const app = await buildApp();
  ...

{"level":30,"time":1759552509169,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-l","res":{"statusCode":200},"responseTime":1.1970889996737242,"msg":"request completed"}
{"level":30,"time":1759552509169,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-m","req":{"method":"GET","url":"/api/program-exercises/8903","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509198,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-m","res":{"statusCode":200},"responseTime":28.686191000044346,"msg":"request completed"}
{"level":30,"time":1759552509208,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-n","req":{"method":"GET","url":"/api/program-exercises/8903","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509237,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-n","res":{"statusCode":200},"responseTime":28.951589999720454,"msg":"request completed"}
{"level":30,"time":1759552509243,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-o","req":{"method":"GET","url":"/api/program-exercises/8903","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509273,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-o","res":{"statusCode":200},"responseTime":30.3017720002681,"msg":"request completed"}
{"level":30,"time":1759552509283,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-p","req":{"method":"GET","url":"/api/programs","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759552509285,"pid":45688,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-p","res":{"statusCode":200},"responseTime":1.5006210003048182,"msg":"request completed"}
1..1
Database connection closed
