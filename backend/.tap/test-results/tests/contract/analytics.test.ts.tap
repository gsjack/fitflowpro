TAP version 14
# Subtest: GET /api/analytics/1rm-progression - T017
{"level":30,"time":1759550015259,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","req":{"method":"GET","url":"/api/analytics/1rm-progression?exercise_id=1&start_date=2025-01-01&end_date=2025-01-31","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 401 unauthorized without JWT
        ok 1 - should return 401 without auth token
        1..1
    ok 1 - returns 401 unauthorized without JWT # time=248.908ms
    
{"level":30,"time":1759550015272,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","res":{"statusCode":401},"responseTime":10.684395999996923,"msg":"request completed"}
{"level":30,"time":1759550015280,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","req":{"method":"POST","url":"/api/auth/register","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015514,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","res":{"statusCode":201},"responseTime":234.30533000000287,"msg":"request completed"}
    # Subtest: validates query parameters and response schema
        # Subtest: requires exercise_id query param
            ok 1 - should return 400 without exercise_id
            1..1
        ok 1 - requires exercise_id query param # time=6.37ms
        
        # Subtest: requires start_date query param
            ok 1 - should return 400 without start_date
            1..1
        ok 2 - requires start_date query param # time=1.656ms
        
        # Subtest: requires end_date query param
            ok 1 - should return 400 without end_date
            1..1
        ok 3 - requires end_date query param # time=1.504ms
        
        # Subtest: returns valid response schema with all params
            ok 1 - should return 200 with valid params
            ok 2 - response should be an array
            1..2
        ok 4 - returns valid response schema with all params # time=4.075ms
        
        1..4
    ok 2 - validates query parameters and response schema # time=253.54ms
    
    1..2
ok 1 - GET /api/analytics/1rm-progression - T017 # time=577.417ms

# Subtest: GET /api/analytics/volume-trends - T018
{"level":30,"time":1759550015648,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","req":{"method":"GET","url":"/api/analytics/volume-trends?muscle_group=chest&start_date=2025-01-01&end_date=2025-01-31","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 401 unauthorized without JWT
        ok 1 - should return 401 without auth token
        1..1
    ok 1 - returns 401 unauthorized without JWT # time=87.815ms
    
{"level":30,"time":1759550015516,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","req":{"method":"GET","url":"/api/analytics/1rm-progression?start_date=2025-01-01&end_date=2025-01-31","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015516,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","res":{"statusCode":400},"err":{"type":"Error","message":"querystring must have required property 'exercise_id'","stack":"Error: querystring must have required property 'exercise_id'\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:178:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at handleRequest (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:24:5)\n    at runPreParsing (/home/asigator/fitness2025/backend/node_modules/fastify/lib/route.js:613:5)\n    at next (/home/asigator/fitness2025/backend/node_modules/fastify/lib/hooks.js:233:9)\n    at /home/asigator/fitness2025/backend/node_modules/@fastify/cors/index.js:204:12\n    at resolveOriginOption (/home/asigator/fitness2025/backend/node_modules/@fastify/cors/index.js:162:129)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"exercise_id"},"message":"must have required property 'exercise_id'"}],"validationContext":"querystring"},"msg":"querystring must have required property 'exercise_id'"}
{"level":30,"time":1759550015518,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","res":{"statusCode":400},"responseTime":2.148528999998234,"msg":"request completed"}
{"level":30,"time":1759550015523,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","req":{"method":"GET","url":"/api/analytics/1rm-progression?exercise_id=1&end_date=2025-01-31","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015523,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","res":{"statusCode":400},"err":{"type":"Error","message":"querystring must have required property 'start_date'","stack":"Error: querystring must have required property 'start_date'\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:178:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at handleRequest (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:24:5)\n    at runPreParsing (/home/asigator/fitness2025/backend/node_modules/fastify/lib/route.js:613:5)\n    at next (/home/asigator/fitness2025/backend/node_modules/fastify/lib/hooks.js:233:9)\n    at /home/asigator/fitness2025/backend/node_modules/@fastify/cors/index.js:204:12\n    at resolveOriginOption (/home/asigator/fitness2025/backend/node_modules/@fastify/cors/index.js:162:129)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"start_date"},"message":"must have required property 'start_date'"}],"validationContext":"querystring"},"msg":"querystring must have required property 'start_date'"}
{"level":30,"time":1759550015524,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","res":{"statusCode":400},"responseTime":0.48974300001282245,"msg":"request completed"}
{"level":30,"time":1759550015525,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","req":{"method":"GET","url":"/api/analytics/1rm-progression?exercise_id=1&start_date=2025-01-01","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015526,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","res":{"statusCode":400},"err":{"type":"Error","message":"querystring must have required property 'end_date'","stack":"Error: querystring must have required property 'end_date'\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:178:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at handleRequest (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:24:5)\n    at runPreParsing (/home/asigator/fitness2025/backend/node_modules/fastify/lib/route.js:613:5)\n    at next (/home/asigator/fitness2025/backend/node_modules/fastify/lib/hooks.js:233:9)\n    at /home/asigator/fitness2025/backend/node_modules/@fastify/cors/index.js:204:12\n    at resolveOriginOption (/home/asigator/fitness2025/backend/node_modules/@fastify/cors/index.js:162:129)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"end_date"},"message":"must have required property 'end_date'"}],"validationContext":"querystring"},"msg":"querystring must have required property 'end_date'"}
{"level":30,"time":1759550015526,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","res":{"statusCode":400},"responseTime":0.3997850000159815,"msg":"request completed"}
{"level":30,"time":1759550015528,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-6","req":{"method":"GET","url":"/api/analytics/1rm-progression?exercise_id=1&start_date=2025-01-01&end_date=2025-01-31","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015531,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-6","res":{"statusCode":200},"responseTime":2.61913500004448,"msg":"request completed"}
{"level":30,"time":1759550015648,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","res":{"statusCode":401},"responseTime":0.4335190000711009,"msg":"request completed"}
{"level":30,"time":1759550015650,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","req":{"method":"POST","url":"/api/auth/register","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015865,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","res":{"statusCode":201},"responseTime":215.28747500001919,"msg":"request completed"}
    # Subtest: validates query parameters and response schema
        # Subtest: requires muscle_group query param
            not ok 1 - should return 400 without muscle_group
              ---
              compare: ===
              at:
                fileName: tests/contract/analytics.test.ts
                lineNumber: 148
                columnNumber: 9
                typeName: Test
              stack: |
                Test.<anonymous> (tests/contract/analytics.test.ts:148:9)
              source: >2
                      });
              
                      t.equal(response.statusCode, 400, 'should return 400 without muscle_group');
                --------^
                    });
              diff: |
                --- expected
                +++ actual
                @@ -1,1 +1,1 @@
                -400
                +200
              ...
            
            1..1
        not ok 1 - requires muscle_group query param # time=24.699ms
          ---
          at:
            fileName: tests/contract/analytics.test.ts
            lineNumber: 139
            columnNumber: 13
            typeName: Test
          source: |2
          
                // Test missing query params
                await t.test('requires muscle_group query param', async (t) => {
            ------------^
                  const response = await app.inject({
                    method: 'GET',
          ...
        
        # Subtest: requires start_date query param
            not ok 1 - should return 400 without start_date
              ---
              compare: ===
              at:
                fileName: tests/contract/analytics.test.ts
                lineNumber: 160
                columnNumber: 9
                typeName: Test
              stack: |
                Test.<anonymous> (tests/contract/analytics.test.ts:160:9)
              source: >2
                      });
              
                      t.equal(response.statusCode, 400, 'should return 400 without start_date');
                --------^
                    });
              diff: |
                --- expected
                +++ actual
                @@ -1,1 +1,1 @@
                -400
                +200
              ...
            
            1..1
        not ok 2 - requires start_date query param # time=7.791ms
          ---
          at:
            fileName: tests/contract/analytics.test.ts
            lineNumber: 151
            columnNumber: 13
            typeName: Test
          source: |2
                });
          
                await t.test('requires start_date query param', async (t) => {
            ------------^
                  const response = await app.inject({
                    method: 'GET',
          ...
        
        # Subtest: requires end_date query param
            not ok 1 - should return 400 without end_date
              ---
              compare: ===
              at:
                fileName: tests/contract/analytics.test.ts
                lineNumber: 172
                columnNumber: 9
                typeName: Test
              stack: |
                Test.<anonymous> (tests/contract/analytics.test.ts:172:9)
              source: |2
                      });
              
                      t.equal(response.statusCode, 400, 'should return 400 without end_date');
                --------^
                    });
              diff: |
                --- expected
                +++ actual
                @@ -1,1 +1,1 @@
                -400
                +200
              ...
            
            1..1
        not ok 3 - requires end_date query param # time=7.512ms
          ---
          at:
            fileName: tests/contract/analytics.test.ts
            lineNumber: 163
            columnNumber: 13
            typeName: Test
          source: |2
                });
          
                await t.test('requires end_date query param', async (t) => {
            ------------^
                  const response = await app.inject({
                    method: 'GET',
          ...
        
        # Subtest: returns valid response schema with all params
            ok 1 - should return 200 with valid params
            not ok 2 - response should be an array
              ---
              at:
                fileName: tests/contract/analytics.test.ts
                lineNumber: 188
                columnNumber: 9
                typeName: Test
              stack: |
                Test.<anonymous> (tests/contract/analytics.test.ts:188:9)
              source: |2
              
                      const data = JSON.parse(response.body);
                      t.ok(Array.isArray(data), 'response should be an array');
                --------^
              
                      // If data exists, validate schema
              ...
            
            1..2
        not ok 4 - returns valid response schema with all params # time=6.21ms
          ---
          at:
            fileName: tests/contract/analytics.test.ts
            lineNumber: 176
            columnNumber: 13
            typeName: Test
          source: >2
          
                // Test with valid params - validate response schema
                await t.test('returns valid response schema with all params', async (t) => {
            ------------^
                  const response = await app.inject({
                    method: 'GET',
          ...
        
        1..4
    not ok 2 - validates query parameters and response schema # time=280.512ms
      ---
      at:
        fileName: tests/contract/analytics.test.ts
        lineNumber: 121
        columnNumber: 11
        typeName: Test
      source: >2
      
          // Test with authentication - validate request params and response schema
          await t.test('validates query parameters and response schema', async (t) => {
        ----------^
            // First register a user to get a token (use unique username)
            const uniqueUsername = `analytics-test-volume-${Date.now()}@example.com`;
      ...
    
    1..2
not ok 2 - GET /api/analytics/volume-trends - T018 # time=399.2ms
  ---
  at:
    fileName: tests/contract/analytics.test.ts
    lineNumber: 107
    columnNumber: 5
    isToplevel: true
  source: |
    });
  
    tap.test('GET /api/analytics/volume-trends - T018', async (t) => {
    ----^
      const app = await buildApp();
  ...

# Subtest: GET /api/analytics/consistency - T019
{"level":30,"time":1759550016024,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","req":{"method":"GET","url":"/api/analytics/consistency","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 401 unauthorized without JWT
        ok 1 - should return 401 without auth token
        1..1
    ok 1 - returns 401 unauthorized without JWT # time=61.646ms
    
{"level":30,"time":1759550015866,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","req":{"method":"GET","url":"/api/analytics/volume-trends?start_date=2025-01-01&end_date=2025-01-31","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015867,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","res":{"statusCode":200},"responseTime":0.9670550000155345,"msg":"request completed"}
{"level":30,"time":1759550015897,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","req":{"method":"GET","url":"/api/analytics/volume-trends?muscle_group=chest&end_date=2025-01-31","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015898,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","res":{"statusCode":200},"responseTime":0.6561800000490621,"msg":"request completed"}
{"level":30,"time":1759550015909,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","req":{"method":"GET","url":"/api/analytics/volume-trends?muscle_group=chest&start_date=2025-01-01","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015910,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","res":{"statusCode":200},"responseTime":0.5268299999879673,"msg":"request completed"}
{"level":30,"time":1759550015921,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-6","req":{"method":"GET","url":"/api/analytics/volume-trends?muscle_group=chest&start_date=2025-01-01&end_date=2025-01-31","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550015922,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-6","res":{"statusCode":200},"responseTime":0.6957119998987764,"msg":"request completed"}
{"level":30,"time":1759550016024,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","res":{"statusCode":401},"responseTime":0.5127919999649748,"msg":"request completed"}
{"level":30,"time":1759550016026,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","req":{"method":"POST","url":"/api/auth/register","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550016241,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","res":{"statusCode":201},"responseTime":214.32007099990733,"msg":"request completed"}
    # Subtest: validates response schema
        ok 1 - should return 200 with valid auth
        ok 2 - response should be an object
        ok 3 - response should have adherence_rate property
        ok 4 - response should have avg_session_duration property
        ok 5 - response should have total_workouts property
        ok 6 - adherence_rate should be number
        ok 7 - avg_session_duration should be number
        ok 8 - total_workouts should be number
        1..8
    ok 2 - validates response schema # time=217.92ms
    
    1..2
ok 3 - GET /api/analytics/consistency - T019 # time=308.612ms

{"level":30,"time":1759550016241,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","req":{"method":"GET","url":"/api/analytics/consistency","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759550016242,"pid":16107,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","res":{"statusCode":200},"responseTime":0.8526510000228882,"msg":"request completed"}
1..3
Database connection closed
