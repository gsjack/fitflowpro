TAP version 14
{"level":30,"time":1759673939894,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","req":{"method":"POST","url":"/api/auth/register","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":30,"time":1759673940133,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-1","res":{"statusCode":201},"responseTime":238.3259069994092,"msg":"request completed"}
# Subtest: POST /api/sets - contract validation
    # Subtest: returns 201 with valid set data
        not ok 1 - should return 201 Created
          ---
          compare: ===
          at:
            fileName: tests/contract/sets.test.ts
            lineNumber: 54
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (tests/contract/sets.test.ts:54:7)
          source: |2
                });
          
                t.equal(response.statusCode, 201, 'should return 201 Created');
            ------^
          
                const body = JSON.parse(response.body);
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -201
            +500
          ...
        
        not ok 2 - response should contain id
          ---
          at:
            fileName: tests/contract/sets.test.ts
            lineNumber: 57
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (tests/contract/sets.test.ts:57:7)
          source: >2
          
                const body = JSON.parse(response.body);
                t.ok(body.id, 'response should contain id');
            ------^
                t.equal(body.localId, validSetData.localId, 'response should echo localId');
                t.equal(body.synced, true, 'response should indicate synced=true');
          ...
        
        not ok 3 - response should echo localId
          ---
          compare: ===
          at:
            fileName: tests/contract/sets.test.ts
            lineNumber: 58
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (tests/contract/sets.test.ts:58:7)
          source: >2
                const body = JSON.parse(response.body);
                t.ok(body.id, 'response should contain id');
                t.equal(body.localId, validSetData.localId, 'response should echo localId');
            ------^
                t.equal(body.synced, true, 'response should indicate synced=true');
              });
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -12345
            +undefined
          ...
        
        not ok 4 - response should indicate synced=true
          ---
          compare: ===
          at:
            fileName: tests/contract/sets.test.ts
            lineNumber: 59
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (tests/contract/sets.test.ts:59:7)
          source: >2
                t.ok(body.id, 'response should contain id');
                t.equal(body.localId, validSetData.localId, 'response should echo localId');
                t.equal(body.synced, true, 'response should indicate synced=true');
            ------^
              });
          diff: |
            --- expected
            +++ actual
            @@ -1,1 +1,1 @@
            -true
            +undefined
          ...
        
        1..4
    not ok 1 - returns 201 with valid set data # time=56.22ms
      ---
      at:
        fileName: tests/contract/sets.test.ts
        lineNumber: 32
        columnNumber: 11
        typeName: Test
      source: |2
          const { token } = registerResponse.json();
      
          await t.test('returns 201 with valid set data', async (t) => {
        ----------^
            const validSetData = {
              workout_id: 1,
      ...
    
{"level":30,"time":1759673940137,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
{"level":50,"time":1759673940142,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","err":{"type":"SqliteError","message":"NOT NULL constraint failed: sets.timestamp","stack":"SqliteError: NOT NULL constraint failed: sets.timestamp\n    at logSet (/home/asigator/fitness2025/backend/src/services/setService.ts:127:29)\n    at Object.<anonymous> (/home/asigator/fitness2025/backend/src/routes/sets.ts:183:24)\n    at preHandlerCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:139:37)\n    at next (/home/asigator/fitness2025/backend/node_modules/fastify/lib/hooks.js:233:9)\n    at handleResolve (/home/asigator/fitness2025/backend/node_modules/fastify/lib/hooks.js:250:7)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","code":"SQLITE_CONSTRAINT_NOTNULL"},"msg":"NOT NULL constraint failed: sets.timestamp"}
{"level":30,"time":1759673940144,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-2","res":{"statusCode":500},"responseTime":7.549539998173714,"msg":"request completed"}
{"level":30,"time":1759673940198,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 400 for weight > 500kg
        ok 1 - should return 400 Bad Request for weight > 500
        1..1
    ok 2 - returns 400 for weight > 500kg # time=3.359ms
    
{"level":30,"time":1759673940199,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","res":{"statusCode":400},"err":{"type":"Error","message":"body/weight_kg must be <= 500","stack":"Error: body/weight_kg must be <= 500\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at /home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:199:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at done (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:192:14)\n    at Parser.defaultJsonParser [as fn] (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:304:5)\n    at Request.onEnd (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:283:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/weight_kg","schemaPath":"#/properties/weight_kg/maximum","keyword":"maximum","params":{"comparison":"<=","limit":500},"message":"must be <= 500"}],"validationContext":"body"},"msg":"body/weight_kg must be <= 500"}
{"level":30,"time":1759673940200,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-3","res":{"statusCode":400},"responseTime":1.9334279969334602,"msg":"request completed"}
{"level":30,"time":1759673940203,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 400 for reps > 50
        ok 1 - should return 400 Bad Request for reps > 50
        1..1
    ok 3 - returns 400 for reps > 50 # time=1.899ms
    
{"level":30,"time":1759673940203,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","res":{"statusCode":400},"err":{"type":"Error","message":"body/reps must be <= 50","stack":"Error: body/reps must be <= 50\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at /home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:199:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at done (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:192:14)\n    at Parser.defaultJsonParser [as fn] (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:304:5)\n    at Request.onEnd (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:283:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/reps","schemaPath":"#/properties/reps/maximum","keyword":"maximum","params":{"comparison":"<=","limit":50},"message":"must be <= 50"}],"validationContext":"body"},"msg":"body/reps must be <= 50"}
{"level":30,"time":1759673940204,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-4","res":{"statusCode":400},"responseTime":0.8038779944181442,"msg":"request completed"}
{"level":30,"time":1759673940205,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 400 for rir > 4
        ok 1 - should return 400 Bad Request for rir > 4
        1..1
    ok 4 - returns 400 for rir > 4 # time=1.491ms
    
{"level":30,"time":1759673940206,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","res":{"statusCode":400},"err":{"type":"Error","message":"body/rir must be <= 4","stack":"Error: body/rir must be <= 4\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at /home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:199:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at done (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:192:14)\n    at Parser.defaultJsonParser [as fn] (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:304:5)\n    at Request.onEnd (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:283:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/rir","schemaPath":"#/properties/rir/maximum","keyword":"maximum","params":{"comparison":"<=","limit":4},"message":"must be <= 4"}],"validationContext":"body"},"msg":"body/rir must be <= 4"}
{"level":30,"time":1759673940206,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-5","res":{"statusCode":400},"responseTime":0.6644739955663681,"msg":"request completed"}
{"level":30,"time":1759673940208,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-6","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 400 for weight < 0
        ok 1 - should return 400 Bad Request for negative weight
        1..1
    ok 5 - returns 400 for weight < 0 # time=1.753ms
    
{"level":30,"time":1759673940208,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-6","res":{"statusCode":400},"err":{"type":"Error","message":"body/weight_kg must be >= 0","stack":"Error: body/weight_kg must be >= 0\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at /home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:199:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at done (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:192:14)\n    at Parser.defaultJsonParser [as fn] (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:304:5)\n    at Request.onEnd (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:283:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/weight_kg","schemaPath":"#/properties/weight_kg/minimum","keyword":"minimum","params":{"comparison":">=","limit":0},"message":"must be >= 0"}],"validationContext":"body"},"msg":"body/weight_kg must be >= 0"}
{"level":30,"time":1759673940209,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-6","res":{"statusCode":400},"responseTime":0.7697950005531311,"msg":"request completed"}
{"level":30,"time":1759673940210,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-7","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 400 for reps < 1
        ok 1 - should return 400 Bad Request for reps < 1
        1..1
    ok 6 - returns 400 for reps < 1 # time=1.571ms
    
{"level":30,"time":1759673940211,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-7","res":{"statusCode":400},"err":{"type":"Error","message":"body/reps must be >= 1","stack":"Error: body/reps must be >= 1\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at /home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:199:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at done (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:192:14)\n    at Parser.defaultJsonParser [as fn] (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:304:5)\n    at Request.onEnd (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:283:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/reps","schemaPath":"#/properties/reps/minimum","keyword":"minimum","params":{"comparison":">=","limit":1},"message":"must be >= 1"}],"validationContext":"body"},"msg":"body/reps must be >= 1"}
{"level":30,"time":1759673940211,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-7","res":{"statusCode":400},"responseTime":0.692551001906395,"msg":"request completed"}
{"level":30,"time":1759673940213,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-8","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 400 for rir < 0
        ok 1 - should return 400 Bad Request for rir < 0
        1..1
    ok 7 - returns 400 for rir < 0 # time=2.434ms
    
{"level":30,"time":1759673940214,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-8","res":{"statusCode":400},"err":{"type":"Error","message":"body/rir must be >= 0","stack":"Error: body/rir must be >= 0\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at /home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:199:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at done (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:192:14)\n    at Parser.defaultJsonParser [as fn] (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:304:5)\n    at Request.onEnd (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:283:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"/rir","schemaPath":"#/properties/rir/minimum","keyword":"minimum","params":{"comparison":">=","limit":0},"message":"must be >= 0"}],"validationContext":"body"},"msg":"body/rir must be >= 0"}
{"level":30,"time":1759673940214,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-8","res":{"statusCode":400},"responseTime":1.422326996922493,"msg":"request completed"}
{"level":30,"time":1759673940216,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-9","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 400 for missing required fields
        ok 1 - should return 400 Bad Request for missing fields
        1..1
    ok 8 - returns 400 for missing required fields # time=1.697ms
    
{"level":30,"time":1759673940216,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-9","res":{"statusCode":400},"err":{"type":"Error","message":"body must have required property 'exercise_id'","stack":"Error: body must have required property 'exercise_id'\n    at defaultSchemaErrorFormatter (/home/asigator/fitness2025/backend/node_modules/fastify/lib/context.js:114:10)\n    at wrapValidationError (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:249:17)\n    at validate (/home/asigator/fitness2025/backend/node_modules/fastify/lib/validation.js:167:16)\n    at preValidationCallback (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:93:25)\n    at handler (/home/asigator/fitness2025/backend/node_modules/fastify/lib/handleRequest.js:77:7)\n    at /home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:199:9\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at done (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:192:14)\n    at Parser.defaultJsonParser [as fn] (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:304:5)\n    at Request.onEnd (/home/asigator/fitness2025/backend/node_modules/fastify/lib/contentTypeParser.js:283:27)","statusCode":400,"code":"FST_ERR_VALIDATION","validation":[{"instancePath":"","schemaPath":"#/required","keyword":"required","params":{"missingProperty":"exercise_id"},"message":"must have required property 'exercise_id'"}],"validationContext":"body"},"msg":"body must have required property 'exercise_id'"}
{"level":30,"time":1759673940217,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-9","res":{"statusCode":400},"responseTime":0.7925640046596527,"msg":"request completed"}
{"level":30,"time":1759673940219,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-a","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 401 unauthorized without JWT
        ok 1 - should return 401 Unauthorized without Authorization header
        1..1
    ok 9 - returns 401 unauthorized without JWT # time=2.58ms
    
{"level":30,"time":1759673940220,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-a","res":{"statusCode":401},"responseTime":1.3598190024495125,"msg":"request completed"}
{"level":30,"time":1759673940222,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-b","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: returns 401 with invalid JWT
        ok 1 - should return 401 Unauthorized with invalid token
        1..1
    ok 10 - returns 401 with invalid JWT # time=1.731ms
    
{"level":30,"time":1759673940223,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-b","res":{"statusCode":401},"responseTime":0.843688003718853,"msg":"request completed"}
{"level":30,"time":1759673940225,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-c","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: validates request schema matches OpenAPI spec
        1..0
    ok 11 - validates request schema matches OpenAPI spec # time=3.718ms
    
{"level":30,"time":1759673940227,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-c","res":{"statusCode":401},"responseTime":0.8360049948096275,"msg":"request completed"}
{"level":30,"time":1759673940229,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-d","req":{"method":"POST","url":"/api/sets","hostname":"localhost:80","remoteAddress":"127.0.0.1"},"msg":"incoming request"}
    # Subtest: validates response schema matches OpenAPI spec
        1..0
    ok 12 - validates response schema matches OpenAPI spec # time=11.497ms
    
    1..12
not ok 1 - POST /api/sets - contract validation # time=779.849ms
  ---
  at:
    fileName: tests/contract/sets.test.ts
    lineNumber: 13
    columnNumber: 1
    isToplevel: true
  source: |2
     */
  
    test('POST /api/sets - contract validation', async (t) => {
    ^
      // Setup test server with actual implementation
      const app = await buildApp();
  ...

{"level":30,"time":1759673940240,"pid":406655,"hostname":"asigator-Legion-5-17ACH6H","reqId":"req-d","res":{"statusCode":401},"responseTime":10.585280001163483,"msg":"request completed"}
1..1
Database connection closed
